/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Panel;

import Form.Dashboard;
import Koneksi.Koneksi;
import Model.StatusType;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.*;
import java.util.Date;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FARHAN
 */
public class TabelTanggapan extends javax.swing.JPanel {

    JPopupMenu contextMenu = new JPopupMenu();
    JMenuItem menuItemDetail = new JMenuItem("Detail Tanggapan");
    /**
     * Creates new form TabelPengaduan
     */
    public DefaultTableModel tabModel;
    private int level;

    private int idpetugas;
    private int nik = 0;

    public TabelTanggapan(int level, int nik, int idpetugas) {
        initComponents();
        tampilDataFromDatabase();
        this.level = level;
        this.idpetugas = idpetugas;
        this.nik = nik;

        if (level == 1) {
            BTN_CETAKLAPORAN.setEnabled(false);
        } else if (level == 2) {

        } else if (level == 3) {
            BTN_CETAKLAPORAN.setEnabled(false);
        }
        contextMenu.add(menuItemDetail);
        judul();
        
        spTable.setVerticalScrollBar(new ScrollBar());
        spTable.getVerticalScrollBar().setBackground(Color.WHITE);
        spTable.getViewport().setBackground(Color.WHITE);

        menuItemDetail.addActionListener(e -> {
            int selectedRow = DG_TAMPIL.getSelectedRow();
            if (selectedRow != -1) {
                // Mendapatkan ID Pengaduan
                String idTanggapanString = DG_TAMPIL.getValueAt(selectedRow, 0).toString();
                int idTanggapan = Integer.parseInt(idTanggapanString);

                String idPengaduanString = DG_TAMPIL.getValueAt(selectedRow, 1).toString();
                int idPengaduan = Integer.parseInt(idPengaduanString);

                // Membuat objek DetailTanggapan dengan ID Pengaduan yang telah didapatkan
                DetailTanggapan detailTanggapan = new DetailTanggapan(level, nik, DG_TAMPIL, idTanggapan, idPengaduan, idpetugas);
                System.out.println("id_Tanggapan: " + idTanggapan);

                // Mendapatkan objek Dashboard yang merupakan parent dari PanelHome
                Dashboard dashboard = (Dashboard) SwingUtilities.getWindowAncestor(this);

                // Jika Dashboard tidak null, set form detailTanggapan
                if (dashboard != null) {
                    dashboard.setForm(detailTanggapan);
                }
            }
        });

        DG_TAMPIL.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showContextMenu(e);
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showContextMenu(e);
                }
            }
        });

        BTN_CETAKLAPORAN.addActionListener(e -> {
            PrintTable.printTable(DG_TAMPIL);
        });

    }

    public static ResultSet getTableData() {
        Connection kon = Koneksi.KoneksiDb();

        try {
            String sql = "SELECT * FROM tbl_tanggapan"; // Gantilah 'nama_tabel' dengan nama tabel yang sesuai
            PreparedStatement ps = kon.prepareStatement(sql);
            return ps.executeQuery();
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        }
    }

    private void showContextMenu(MouseEvent e) {
        // Menentukan baris yang dipilih
        int row = DG_TAMPIL.rowAtPoint(e.getPoint());
        DG_TAMPIL.getSelectionModel().setSelectionInterval(row, row);

        // Menampilkan menu pop-up di lokasi klik
        contextMenu.show(DG_TAMPIL, e.getX(), e.getY());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new Panel.PanelBorder();
        jLabel1 = new javax.swing.JLabel();
        BTN_CETAKLAPORAN = new javax.swing.JButton();
        panelHeader2 = new Panel.PanelHeader();
        spTable = new javax.swing.JScrollPane();
        DG_TAMPIL = new Panel.Table2();

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(127, 127, 127));
        jLabel1.setText("Tabel Tanggapan");

        BTN_CETAKLAPORAN.setText("Cetak Laporan");
        BTN_CETAKLAPORAN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BTN_CETAKLAPORANMouseClicked(evt);
            }
        });
        BTN_CETAKLAPORAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_CETAKLAPORANActionPerformed(evt);
            }
        });

        spTable.setBorder(null);

        DG_TAMPIL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        spTable.setViewportView(DG_TAMPIL);

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spTable, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(20, 20, 20)
                        .addComponent(BTN_CETAKLAPORAN, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(322, 322, 322)
                        .addComponent(panelHeader2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BTN_CETAKLAPORAN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelHeader2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(spTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_CETAKLAPORANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_CETAKLAPORANActionPerformed

    }//GEN-LAST:event_BTN_CETAKLAPORANActionPerformed

    private void BTN_CETAKLAPORANMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BTN_CETAKLAPORANMouseClicked

    }//GEN-LAST:event_BTN_CETAKLAPORANMouseClicked

    private void judul() {
        Object[] judul = {"ID Tanggapan", "ID Pengaduan", "Tanggal Tanggapan", "Isi Tanggapan", "ID Petugas"};
        tabModel = new DefaultTableModel(null, judul);
        DG_TAMPIL.setModel(tabModel);
    }

    private void tampilDataFromDatabase() {
        try {
            Connection kon = Koneksi.KoneksiDb();
            Statement st = kon.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tbl_tanggapan");

            // Membersihkan model tabel sebelum menambahkan data baru
            DefaultTableModel tabModel = (DefaultTableModel) DG_TAMPIL.getModel();
            tabModel.setRowCount(0);

            while (rs.next()) {
                // Ganti sesuai dengan nama kolom yang sesuai di tbl_tanggapan
                int idTanggapan = rs.getInt("id_tanggapan");
                int idPengaduan = rs.getInt("id_pengaduan");
                Date tglTanggapan = rs.getDate("tgl_tanggapan");
                String tanggapan = rs.getString("tanggapan");
                int idPetugas = rs.getInt("id_petugas");

                // Anda dapat melakukan apa pun yang diperlukan dengan data ini
                // Misalnya, menampilkan dalam tabel atau menggunakan untuk tujuan lain
                // Contoh menambahkan data ke dalam tabel
                Object[] data = {
                    idTanggapan,
                    idPengaduan,
                    tglTanggapan,
                    tanggapan,
                    idPetugas
                };

                tabModel.addRow(data);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_CETAKLAPORAN;
    private Panel.Table2 DG_TAMPIL;
    private javax.swing.JLabel jLabel1;
    private Panel.PanelBorder panelBorder1;
    private Panel.PanelHeader panelHeader2;
    private javax.swing.JScrollPane spTable;
    // End of variables declaration//GEN-END:variables
}
